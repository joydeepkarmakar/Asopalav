@model Asopalav.Models.ProductModel

@using (Html.BeginForm("Products", "Product", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal admin-margin-top-pro">
        <h4 style="text-align:center">Product Model</h4>
        <hr />

        <div class="row" id="input-width">
            <div class="col-xs-12 col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.ProductCode, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        @Html.TextBoxFor(m => m.ProductCode, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ProductCode, "", new { @style = "color:red" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ProductName, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        @Html.TextBoxFor(m => m.ProductName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ProductName, "", new { @style = "color:red" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ProductTypeID, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        @Html.DropDownListFor(m => m.ProductTypeID, ViewData["Gender"] as List<SelectListItem>
                                                                                 , "Choose...", new { @class = "form-control gender-width" })
                        @Html.ValidationMessageFor(model => model.ProductTypeID, "", new { @style = "color:red" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.WeightInGms, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        @Html.TextBoxFor(m => m.WeightInGms, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.WeightInGms, "", new { @style = "color:red" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.HeightInInch, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        <span>
                            @Html.TextBoxFor(m => m.HeightInInch, new { @class = "form-control", @style = "50%" })
                            X
                            @Html.TextBoxFor(m => m.WidthInInch, new { @class = "form-control", @style = "50%" })
                        </span>
                        @Html.ValidationMessageFor(m => m.HeightInInch, "", new { @style = "color:red" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Price, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        @Html.TextBoxFor(m => m.Price, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Price, "", new { @style = "color:red" })
                    </div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-6">
                <div class="form-group">
                    <div class="col-sm-offset-4 col-sm-8">
                        <div class="checkbox chb-prod">
                            @Html.LabelFor(m => m.IsOffer)
                            @Html.CheckBoxFor(m => m.IsOffer)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.OfferPrice, new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        @Html.TextBoxFor(m => m.OfferPrice, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @*@Html.LabelFor(m => m.ImagePath, new { @class = "control-label col-sm-4" })*@
                    <div class="col-sm-8">
                        <input type="file" class="form-control-file" id="ImagePath" name="ImagePath" aria-describedby="fileHelp" required>
                        @*<button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">Upload Images</button>

        <!-- Modal -->
        <div class="modal fade" id="myModal" role="dialog" data-backdrop="static">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Modal Header</h4>
                    </div>
                    <div class="modal-body">
                        <div>
                            @Html.Partial("_UploadImages")
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>

            </div>
        </div>

                        @Html.ActionLink("Upload Images", "UploadImage", "Product", "", new { target = "_new", width = "200px", height = "300px", @class = "btn btn-info" })*@
                        @Html.ValidationMessageFor(m => m.ImagePath, "", new { @style = "color:red" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-offset-4 col-sm-8">
                        <div class="checkbox chb-prod">
                            @Html.LabelFor(m => m.IsActive)
                            @Html.CheckBoxFor(m => m.IsActive)
                            @Html.ValidationMessageFor(m => m.IsActive, "", new { @style = "color:red" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Description, new { @class = "control-label col-sm-4" })
                    <div class="col-sm-8">
                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control rounded-0" })
                        @Html.ValidationMessageFor(m => m.Description, "", new { @style = "color:red" })
                    </div>
                </div>

            </div>
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-primary col-xs-offset-0 col-sm-offset-3 col-md-offset-4 col-xs-12 col-sm-6 col-md-4">Create</button>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
